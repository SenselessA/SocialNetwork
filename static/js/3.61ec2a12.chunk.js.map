{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/myPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","statusInput","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","editStatus","onDoubleClick","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","btnEdit","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","onClick","profileInfo","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","profileWrapper","photoSetting","src","photos","large","userPhoto","mainPhoto","alt","downloadPhoto","target","files","length","info","initialValues","formData","then","Post","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","p","id","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","Component","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/3.61ec2a12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPhoto\":\"ProfileInfo_mainPhoto__1khI6\",\"contact\":\"ProfileInfo_contact__3sHzg\",\"photoSetting\":\"ProfileInfo_photoSetting__3avJK\",\"profileWrapper\":\"ProfileInfo_profileWrapper__2kuxf\",\"downloadPhoto\":\"ProfileInfo_downloadPhoto__342oR\",\"btnEdit\":\"ProfileInfo_btnEdit__2YCYl\",\"info\":\"ProfileInfo_info__9gBF2\",\"status\":\"ProfileInfo_status__2COQQ\",\"statusInput\":\"ProfileInfo_statusInput__VT0Ce\",\"editStatus\":\"ProfileInfo_editStatus__1bIsL\",\"profileInfo\":\"ProfileInfo_profileInfo__2N8f_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__31gx9\"};","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n       setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { !editMode\r\n                ?\r\n                <div className={s.status}>\r\n                    <b>Status: </b><span className={s.editStatus} onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                </div>\r\n                :\r\n                <div className={s.status}>\r\n                    <input className={s.statusInput} onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react'\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls'\r\nimport s from './ProfileInfo.module.css';\r\nimport { reduxForm } from 'redux-form'\r\nimport style from '../../common/FormsControls/FormsControls.module.css'\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <div><button className={s.btnEdit} >Save profile</button></div>\r\n            {error\r\n                ? <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                : null}\r\n        </div>\r\n        <div>\r\n            <b>FullName:</b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {createField(\"\", \"lookingForAJob\", [], Input, {type: 'checkbox'})}\r\n        </div>\r\n\r\n            <div>\r\n                <b>My professional skills:</b>\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n\r\n        <div>\r\n            <b>About me:</b> \r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b> {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, { useState } from 'react';\r\nimport userPhoto from '../../../assets/images/userImage.png';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then(() => { setEditMode(false) })\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileWrapper}>\r\n            <div className={s.photoSetting}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} alt='ava' />\r\n                {isOwner &&\r\n                    <div className={s.downloadPhoto}>\r\n                        <input type=\"file\" onChange={mainPhotoSelected} />\r\n                    </div>}\r\n            </div>\r\n\r\n            <div className={s.info}>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n        {isOwner ? <div><button className={s.btnEdit} onClick={goToEditMode}>Edit profile</button></div> : null}\r\n        <div className={s.profileInfo}>\r\n            <b>FullName</b> {profile.fullName}\r\n        </div>\r\n        <div className={s.profileInfo}>\r\n            <b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div className={s.profileInfo}>\r\n                <b>My professional skills</b> {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div className={s.profileInfo}>\r\n            <b>About me:</b> {profile.aboutMe}\r\n        </div>\r\n        <div className={s.profileInfo}>\r\n            <b>Contacts</b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n    <div>\r\n        <div>{props.message}</div>\r\n        <div>Likes: {props.likesCount}</div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newPostText' component={Textarea} placeholder={'Post message'}\r\n                    validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts\r\n        .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>My Posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => { dispatch(addPostActionCreator(newPostText)) }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/myPostsContainer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    if (!props.profile) return <Preloader />\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                saveProfile={props.saveProfile}\r\n                updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, updateStatus, getStatus, savePhoto, saveProfile } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile() \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile() \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n            isOwner={!this.props.match.params.userId}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n/* let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default connect(mapStateToProps,{getUserProfile})(WithUrlDataContainerComponent); */\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    // withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}