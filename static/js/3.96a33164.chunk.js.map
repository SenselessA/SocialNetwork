{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/myPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","mainPhoto","alt","target","files","length","initialValues","formData","then","Post","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","p","id","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","Component","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/3.96a33164.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPhoto\":\"ProfileInfo_mainPhoto__1khI6\",\"contact\":\"ProfileInfo_contact__3sHzg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__31gx9\"};","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n       setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode\r\n                ?\r\n                <div>\r\n                    <b>Status: </b><span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react'\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls'\r\nimport s from './ProfileInfo.module.css';\r\nimport { reduxForm } from 'redux-form'\r\nimport style from '../../common/FormsControls/FormsControls.module.css'\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <div><button>Save</button></div>\r\n            {error\r\n                ? <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                : null}\r\n        </div>\r\n        <div>\r\n            <b>FullName:</b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {createField(\"\", \"lookingForAJob\", [], Input, {type: 'checkbox'})}\r\n        </div>\r\n\r\n            <div>\r\n                <b>My professional skills:</b>\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n\r\n        <div>\r\n            <b>About me:</b> \r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b> {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, { useState } from 'react';\r\nimport userPhoto from '../../../assets/images/userImage.png';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n        .then(()=>{setEditMode(false)})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <div>\r\n                <img alt=\"photoone\" src=\"https://images.unsplash.com/photo-1499084732479-de2c02d45fcc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\" />\r\n            </div> */}\r\n            <div>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} alt='ava' />\r\n                {isOwner && <input type=\"file\" onChange={mainPhotoSelected} />}\r\n\r\n                { editMode \r\n                ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> \r\n                : <ProfileData goToEditMode={ () => {setEditMode(true)} } profile={profile} isOwner={isOwner} />}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n        {isOwner ? <div><button onClick={goToEditMode}>Edit</button></div> : null}\r\n        <div>\r\n            <b>FullName</b> {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b> {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>About me:</b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n    <div>\r\n        <div>{props.message}</div>\r\n        <div>Likes: {props.likesCount}</div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newPostText' component={Textarea} placeholder={'Post message'}\r\n                    validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts\r\n        .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>My Posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => { dispatch(addPostActionCreator(newPostText)) }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/myPostsContainer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    if (!props.profile) return <Preloader />\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                saveProfile={props.saveProfile}\r\n                updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, updateStatus, getStatus, savePhoto, saveProfile } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile() \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile() \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n            isOwner={!this.props.match.params.userId}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n/* let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default connect(mapStateToProps,{getUserProfile})(WithUrlDataContainerComponent); */\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    // withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}