{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMesagesForm.jsx","components/Dialogs/Dialogs.jsx","hok/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","style","dialogName","to","dialogName__item","activeClassName","active","name","Message","message__item","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogElements","dialogs","map","d","key","messagesElements","messages","m","isAuth","dialogNames","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,WAAa,4BAA4B,iBAAmB,kCAAkC,OAAS,wBAAwB,SAAW,0BAA0B,cAAgB,iC,+FCcrQC,EAXI,SAACC,GAEhB,IAAMC,EAAO,YAAcD,EAAME,GAEjC,OACI,yBAAKC,UAAWC,IAAMC,YAClB,kBAAC,IAAD,CAASC,GAAIL,EAAME,UAAWC,IAAMG,iBAAkBC,gBAAiBJ,IAAMK,QAAST,EAAMU,QCDzFC,EANC,SAACX,GACb,OACI,yBAAKG,UAAWC,IAAMQ,eAAgBZ,EAAMa,U,yCCA9CC,EAAcC,YAAiB,IActBC,cAAU,CAACC,KAAM,kBAAjBD,EAZQ,SAAChB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUV,GAC5CJ,KAAK,iBAAiBe,YAAY,wBAE3C,6BAAK,6CCuBFC,EA9BC,SAAC1B,GAEb,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE9B,GAAIA,GAAI8B,EAAE9B,QACnFgC,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAElC,QAMnF,OAAKF,EAAMqC,OAGP,yBAAKlC,UAAW,WAAaC,IAAM0B,SAE/B,yBAAK3B,UAAWC,IAAMkC,aACjBT,GAGL,yBAAK1B,UAAWC,IAAM+B,UAClB,6BAAMD,GAEN,kBAAC,EAAD,CAAqBhB,SAhBb,SAACqB,GACjBvC,EAAMwC,YAAYD,EAAOE,qBAGH,kBAAC,IAAD,CAAUnC,GAAI,Y,gDCdxCoC,EAA6B,SAACf,GAAD,MAAY,CACzCU,OAAQV,EAAMgB,KAAKN,S,OCqBRO,sBACXC,aApBkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACkB,GACtB,MAAO,CACHN,YAAa,SAACC,GACXK,EAASC,YAAmBN,UDRP,SAACO,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKlD,MAAMqC,OAET,kBAACW,EAAcE,KAAKlD,OAFI,kBAAC,IAAD,CAAUM,GAAI,eAHV,GACX6C,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAoCI,KCS9DL,CAGTlB","file":"static/js/4.641647b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__20K2a\",\"dialogNames\":\"Dialogs_dialogNames__3L649\",\"dialogName\":\"Dialogs_dialogName__pOO1W\",\"dialogName__item\":\"Dialogs_dialogName__item__wQKSo\",\"active\":\"Dialogs_active__3Dujh\",\"messages\":\"Dialogs_messages__3Ljh5\",\"message__item\":\"Dialogs_message__item__1E2vW\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from '../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    \r\n    const path = \"/dialogs/\" + props.id\r\n\r\n    return (\r\n        <div className={style.dialogName}>\r\n            <NavLink to={path} className={style.dialogName__item} activeClassName={style.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport style from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.message__item}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]}\r\n                     name='newMessageBody' placeholder='Enter your message'/>\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'AddMessageForm'})(AddMessageForm)","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Redirect } from 'react-router-dom';\r\nimport AddMessageFormRedux from './AddMesagesForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n        <div className={'content ' + style.dialogs}>\r\n\r\n            <div className={style.dialogNames}>\r\n                {dialogElements}\r\n            </div>\r\n\r\n            <div className={style.messages}>\r\n                <div>{messagesElements}</div>\r\n\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n\r\n}","import React from 'react'\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hok/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n           dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n/*  Что делает COMPOSE: Возьми \"диалогс\" закинь в withAuthRedirect(\"диалогс\"), потом \"результат\" withAuthRedirect закинь в connect(mapStateToProps, mapDispatchToProps)(\"результат\")\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\nexport default DialogsContainer; */\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n    )(Dialogs)"],"sourceRoot":""}