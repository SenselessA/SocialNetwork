{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/myPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","statusInput","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","editStatus","onDoubleClick","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","style","formSummaryError","profileInfo","createField","Input","cn","jobChek","type","Textarea","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","profileWrapper","photoSetting","src","photos","large","userPhoto","mainPhoto","alt","downloadPhoto","id","target","files","length","for","info","initialValues","formData","then","Post","postItem","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","textPost","name","component","placeholder","validate","required","addPostBtn","MyPosts","React","memo","postsElements","posts","p","myPost","addPost","title","values","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","Component","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/3.5682e9f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPhoto\":\"ProfileInfo_mainPhoto__187pk\",\"contact\":\"ProfileInfo_contact__2u4zz\",\"photoSetting\":\"ProfileInfo_photoSetting__3HrK8\",\"profileWrapper\":\"ProfileInfo_profileWrapper__zOCTr\",\"downloadPhoto\":\"ProfileInfo_downloadPhoto__39JBl\",\"info\":\"ProfileInfo_info__3kqkH\",\"status\":\"ProfileInfo_status__1qkfr\",\"statusInput\":\"ProfileInfo_statusInput__LWLYN\",\"editStatus\":\"ProfileInfo_editStatus__tmp2i\",\"profileInfo\":\"ProfileInfo_profileInfo__1jebJ\",\"jobChek\":\"ProfileInfo_jobChek__Q7ApR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPost\":\"MyPosts_myPost__2eFIb\",\"addPost\":\"MyPosts_addPost__A8eiI\",\"posts\":\"MyPosts_posts__VVvkL\",\"textPost\":\"MyPosts_textPost__ixwSK\",\"title\":\"MyPosts_title__W91Zk\",\"addPostBtn\":\"MyPosts_addPostBtn__2_9zd\",\"postItem\":\"MyPosts_postItem__iqjnQ\"};","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n       setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { !editMode\r\n                ?\r\n                <div className={s.status}>\r\n                    <b>Status: </b><span className={s.editStatus} onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                </div>\r\n                :\r\n                <div className={s.status}>\r\n                    <input className={s.statusInput} onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react'\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls'\r\nimport s from './ProfileInfo.module.css';\r\nimport { reduxForm } from 'redux-form'\r\nimport style from '../../common/FormsControls/FormsControls.module.css'\r\nimport cn from 'classnames'\r\nimport '../../../App.css';\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <div><button className='btn' >Save profile</button></div>\r\n            {error\r\n                ? <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                : null}\r\n        </div>\r\n        <div className={s.profileInfo}>\r\n            <b>FullName:</b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div className={cn(s.profileInfo, s.jobChek)}>\r\n            <b>Looking for a job:</b> {createField(\"\", \"lookingForAJob\", [], Input, {type: 'checkbox'})}\r\n        </div>\r\n\r\n            <div className={s.profileInfo}>\r\n                <b>My professional skills:</b>\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n\r\n        <div className={s.profileInfo}>\r\n            <b>About me:</b> \r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div className={s.profileInfo}>\r\n            <b>Contacts</b> {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, { useState } from 'react';\r\nimport userPhoto from '../../../assets/images/userImage.png';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport '../../../App.css';\r\nimport cn from 'classnames'\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then(() => { setEditMode(false) })\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileWrapper}>\r\n            <div className={s.photoSetting}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} alt='ava' />\r\n                {isOwner &&\r\n                    <div className={s.downloadPhoto}>\r\n                        <input type=\"file\" id='file' onChange={mainPhotoSelected} />\r\n                        <label for='file' className={cn('btn', 'mainPhotoSelected')}>\r\n                            Выбрать файл\r\n                        </label>\r\n                    </div>}\r\n            </div>\r\n\r\n            <div className={s.info}>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n        {isOwner ? <div><button className='btn' onClick={goToEditMode}>Edit profile</button></div> : null}\r\n        <div className={s.profileInfo}>\r\n            <b>FullName</b> {profile.fullName}\r\n        </div>\r\n        <div className={s.profileInfo}>\r\n            <b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div className={s.profileInfo}>\r\n                <b>My professional skills</b> {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div className={s.profileInfo}>\r\n            <b>About me:</b> {profile.aboutMe}\r\n        </div>\r\n        <div className={s.profileInfo}>\r\n            <b>Contacts</b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react'\r\nimport style from './MyPosts.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n    <div className={style.postItem}>\r\n        <div>{props.message}</div>\r\n        <div>Likes: {props.likesCount}</div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport cn from 'classnames'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field className={style.textPost} name='newPostText' component={Textarea} placeholder={'Post message'}\r\n                    validate={[required, maxLength10]} />\r\n            </div>\r\n                <button className={cn('btn', style.addPostBtn)}>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts\r\n        .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={style.myPost}>\r\n            <div className={style.addPost}>\r\n                <h3 className={style.title}>My Posts</h3>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => { dispatch(addPostActionCreator(newPostText)) }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/myPostsContainer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    if (!props.profile) return <Preloader />\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                saveProfile={props.saveProfile}\r\n                updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, updateStatus, getStatus, savePhoto, saveProfile } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile() \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile() \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n            isOwner={!this.props.match.params.userId}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n/* let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default connect(mapStateToProps,{getUserProfile})(WithUrlDataContainerComponent); */\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    // withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}