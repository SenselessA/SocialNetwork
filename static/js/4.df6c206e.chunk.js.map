{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/myPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","src","photos","large","alt","Preloader","Post","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","map","p","values","addPost","newPostText","className","style","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","withRouter","auth","id","isAuth"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,MAAQ,yB,qHCuCXC,EArCgB,SAACC,GAAW,IAAD,EAERC,oBAAS,GAFD,mBAEjCC,EAFiC,KAEvBC,EAFuB,OAGZF,mBAASD,EAAMI,QAHH,mBAGjCA,EAHiC,KAGzBC,EAHyB,KAKtCC,qBAAW,WACPD,EAAUL,EAAMI,UACjB,CAACJ,EAAMI,SAcV,OACI,6BACOF,EAMC,6BACI,2BAAOK,SAbA,SAACC,GACrBH,EAAUG,EAAEC,cAAcC,QAYoBC,WAAW,EAAMC,OAlBvC,WACvBT,GAAY,GACZH,EAAMa,aAAaT,IAgBuEM,MAAON,KALzF,6BACI,0BAAMU,cAjBG,WACrBX,GAAY,KAgBwCH,EAAMI,QAAU,WCL7DW,EAnBK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASZ,EAA0B,EAA1BA,OAAQS,EAAkB,EAAlBA,aAEnC,OAAKG,EAKD,6BAII,6BACI,yBAAKC,IAAKD,EAAQE,OAAOC,MAAOC,IAAI,QACpC,kBAAC,EAAD,CAAwBhB,OAAQA,EAAQS,aAAcA,MAVvD,kBAACQ,EAAA,EAAD,O,0BCGAC,EATF,SAACtB,GACV,OACA,6BACI,6BAAMA,EAAMuB,SACZ,uCAAavB,EAAMwB,c,iCCCrBC,EAAcC,YAAiB,IAgBjCC,EAAsBC,YAAU,CAAEC,KAAM,yBAAlBD,EAdH,SAAC5B,GACpB,OACI,0BAAM8B,SAAU9B,EAAM+B,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWC,IAAUC,YAAa,eACxDC,SAAU,CAACC,IAAUb,MAE7B,6BACI,iDA2BDc,EAnBCC,IAAMC,MAAK,SAACzC,GACxB,IAAI0C,EAAgB1C,EAAM2C,MACrBC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMtB,QAASsB,EAAEtB,QAASC,WAAYqB,EAAErB,gBAMtD,OACI,6BACI,wCACA,kBAACG,EAAD,CAAqBG,SAPb,SAACgB,GACb9C,EAAM+C,QAAQD,EAAOE,gBAOjB,yBAAKC,UAAWC,IAAMP,OACjBD,O,QClBFS,EAFUC,aAbD,SAACC,GACrB,MAAO,CACHV,MAAOU,EAAMC,YAAYX,MACzBK,YAAaK,EAAMC,YAAYN,gBAIZ,SAACO,GACxB,MAAO,CACHR,QAAS,SAACC,GAAkBO,EAASC,YAAqBR,QAIzCI,CAA6Cb,GCAvDkB,EAZC,SAACzD,GAEb,OAAKA,EAAMgB,QAGP,yBAAKiC,UAAU,WACX,kBAAC,EAAD,CAAajC,QAAShB,EAAMgB,QAASZ,OAAQJ,EAAMI,OAAQS,aAAcb,EAAMa,eAC/E,kBAAC,EAAD,OALmB,kBAACQ,EAAA,EAAD,O,eCDzBqC,E,4LAGE,IAAIC,EAASC,KAAK5D,MAAM6D,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAK5D,MAAM+D,mBAEhBH,KAAK5D,MAAMgE,QAAQC,KAAK,UAGhCL,KAAK5D,MAAMkE,eAAeP,GAC1BC,KAAK5D,MAAMmE,UAAUR,K,+BAIrB,OAAO,kBAAC,EAAD,iBAAaC,KAAK5D,MAAlB,CACHgB,QAAS4C,KAAK5D,MAAMgB,QACpBZ,OAAQwD,KAAK5D,MAAMI,OACnBS,aAAc+C,KAAK5D,MAAMa,oB,GAlBN2B,IAAM4B,WAmCtBC,sBACXC,IACAlB,aAfkB,SAACC,GAAD,MAAY,CAC9BrC,QAASqC,EAAMC,YAAYtC,QAC3BZ,OAAQiD,EAAMC,YAAYlD,OAC1B2D,iBAAkBV,EAAMkB,KAAKC,GAC7BC,OAAQpB,EAAMkB,KAAKE,UAWM,CAAEP,mBAAgBC,cAAWtD,mBAF3CwD,CAIbX","file":"static/js/4.df6c206e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__31gx9\"};","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n       setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode\r\n                ?\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    \r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {/* <div>\r\n                <img alt=\"photoone\" src=\"https://images.unsplash.com/photo-1499084732479-de2c02d45fcc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\" />\r\n            </div> */}\r\n            <div>\r\n                <img src={profile.photos.large} alt='ava'/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n    <div>\r\n        <div>{props.message}</div>\r\n        <div>Likes: {props.likesCount}</div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newPostText' component={Textarea} placeholder={'Post message'}\r\n                    validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts\r\n        .map(p => <Post message={p.message} likesCount={p.likesCount} />)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>My Posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => { dispatch(addPostActionCreator(newPostText)) }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/myPostsContainer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    if (!props.profile) return <Preloader />\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, updateStatus, getStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n/* let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default connect(mapStateToProps,{getUserProfile})(WithUrlDataContainerComponent); */\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    // withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}